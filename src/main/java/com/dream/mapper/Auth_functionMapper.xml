<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dream.mapper.Auth_functionMapper">
<sql id="sqlsel">id as "id" ,name as "name" ,parent_id as "parent_id" ,url as "url" ,serial_num as "serial_num" ,is_navigation as "is_navigation" ,type as "type",create_time as "create_time" ,update_time as "update_time" </sql>
<sql id="upperSel">ID,NAME,PARENT_ID,URL,SERIAL_NUM,IS_NAVIGATION,TYPE,CREATE_TIME,UPDATE_TIME</sql>
  <select id="select" resultType="Auth_function" >
      SELECT <include refid="upperSel"/> FROM auth_function 
       WHERE id=#{id,jdbcType=VARCHAR}  
  </select>
  <select id="select_class" parameterType="Map" resultType="Auth_function">
      SELECT <include refid="upperSel"/> FROM auth_function 
      <where>
<if test="id != null "> AND id = #{id, jdbcType=VARCHAR} </if> 
<if test="name != null "> AND name = #{name, jdbcType=VARCHAR} </if> 
<if test="parent_id != null "> AND parent_id = #{parent_id, jdbcType=VARCHAR} </if> 
<if test="url != null "> AND url = #{url, jdbcType=VARCHAR} </if> 
<if test="serial_num != null "> AND serial_num = #{serial_num, jdbcType=VARCHAR} </if> 
<if test="is_navigation != null "> AND is_navigation = #{is_navigation, jdbcType=VARCHAR} </if> 
<if test="type != null "> AND type = #{type, jdbcType=VARCHAR} </if> 
<if test="create_time != null "> AND create_time = #{create_time, jdbcType=VARCHAR} </if> 
<if test="update_time != null "> AND update_time = #{update_time, jdbcType=VARCHAR} </if> 
        <if test="otherwhere != null "> AND   ${otherwhere} </if> 
        </where>

   <if test="orderby != null">
    order by ${orderby}
 </if>
  </select>
  <select id="select_map" resultType="hashmap" parameterType="Map" >
      SELECT <include refid="sqlsel"/> FROM auth_function
      <where>
<if test="id != null "> AND id = #{id, jdbcType=VARCHAR} </if> 
<if test="name != null "> AND name = #{name, jdbcType=VARCHAR} </if> 
<if test="parent_id != null "> AND parent_id = #{parent_id, jdbcType=VARCHAR} </if> 
<if test="url != null "> AND url = #{url, jdbcType=VARCHAR} </if> 
<if test="serial_num != null "> AND serial_num = #{serial_num, jdbcType=VARCHAR} </if> 
<if test="is_navigation != null "> AND is_navigation = #{is_navigation, jdbcType=VARCHAR} </if> 
<if test="type != null "> AND type = #{type, jdbcType=VARCHAR} </if> 
<if test="create_time != null "> AND create_time = #{create_time, jdbcType=VARCHAR} </if> 
<if test="update_time != null "> AND update_time = #{update_time, jdbcType=VARCHAR} </if> 
        <if test="otherwhere != null "> AND   ${otherwhere} </if> 
        </where>

   <if test="orderby != null">
    order by ${orderby}
 </if>
   <if test="limit != null">
    limit ${limit}
 </if>
  </select>
  <select id="select_custclass" parameterType="Map" resultType="Auth_function">
      select * from auth_function f 
		where 
		<if test="url != null "> f.url = #{url, jdbcType=VARCHAR} and </if> 
		f.id in(select function_id from auth_role_function rf 
					where rf.role_id in(select ur.role_id from auth_user_role ur where ur.user_id = #{user_id, jdbcType=VARCHAR}))
  </select>
  <select id="select_custclass2" parameterType="Map" resultType="Auth_function">
      select f.* from auth_role_function rf
      inner join auth_function f on f.id=rf.function_id
		      <where>
<if test="id != null "> AND rf.id = #{id, jdbcType=VARCHAR} </if> 
<if test="role_id != null "> AND rf.role_id = #{role_id, jdbcType=VARCHAR} </if> 
<if test="function_id != null "> AND rf.function_id = #{function_id, jdbcType=VARCHAR} </if> 
<if test="status != null "> AND rf.status = #{status, jdbcType=VARCHAR} </if> 
<if test="create_time != null "> AND rf.create_time = #{create_time, jdbcType=VARCHAR} </if> 
<if test="update_time != null "> AND rf.update_time = #{update_time, jdbcType=VARCHAR} </if> 
        <if test="otherwhere != null "> AND   ${otherwhere} </if> 
        </where>
  </select>
  <select id="select_count2" parameterType="Map" resultType="String">
      select count(1) from auth_function f 
		where 
		<if test="url != null "> f.url = #{url, jdbcType=VARCHAR} and </if> 
		f.id in(select function_id from auth_role_function rf 
					where rf.role_id in(select ur.role_id from auth_user_role ur where ur.user_id = #{user_id, jdbcType=VARCHAR}))
  </select>
  <select id="select_count" resultType="String" parameterType="Map" >
      SELECT count(*) FROM auth_function
      <where>
<if test="id != null "> AND id = #{id, jdbcType=VARCHAR} </if> 
<if test="name != null "> AND name = #{name, jdbcType=VARCHAR} </if> 
<if test="parent_id != null "> AND parent_id = #{parent_id, jdbcType=VARCHAR} </if> 
<if test="url != null "> AND url = #{url, jdbcType=VARCHAR} </if> 
<if test="serial_num != null "> AND serial_num = #{serial_num, jdbcType=VARCHAR} </if> 
<if test="is_navigation != null "> AND is_navigation = #{is_navigation, jdbcType=VARCHAR} </if> 
<if test="type != null "> AND type = #{type, jdbcType=VARCHAR} </if> 
<if test="create_time != null "> AND create_time = #{create_time, jdbcType=VARCHAR} </if> 
<if test="update_time != null "> AND update_time = #{update_time, jdbcType=VARCHAR} </if> 
        <if test="otherwhere != null "> AND   ${otherwhere} </if> 
        </where>

  </select>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="Auth_function">
      INSERT INTO auth_function (name,parent_id,url,serial_num,is_navigation,type,create_time,update_time)VALUES(#{name,jdbcType=VARCHAR},#{parent_id,jdbcType=VARCHAR},#{url,jdbcType=VARCHAR},#{serial_num,jdbcType=VARCHAR},#{is_navigation,jdbcType=VARCHAR},#{type,jdbcType=VARCHAR},#{create_time,jdbcType=VARCHAR},#{update_time,jdbcType=VARCHAR})
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    <selectKey resultType ="java.lang.Integer" keyProperty= "id" order= "AFTER">
         SELECT LAST_INSERT_ID()
    </selectKey >
    INSERT INTO auth_function (name,parent_id,url,serial_num,is_navigation,type,create_time,update_time)VALUES
    <foreach collection="list" item="auth_function" index="index" separator=",">
  	(#{auth_function.name},#{auth_function.parent_id},#{auth_function.url},#{auth_function.serial_num},#{auth_function.is_navigation},#{auth_function.type},#{auth_function.create_time},#{auth_function.update_time})
    </foreach>
  </insert>
  <update id="update" parameterType="Auth_function">
      UPDATE auth_function SET
<if test="id != null ">  id = #{id, jdbcType=VARCHAR} </if> 
<if test="name != null "> , name = #{name, jdbcType=VARCHAR} </if> 
<if test="parent_id != null "> , parent_id = #{parent_id, jdbcType=VARCHAR} </if> 
<if test="url != null "> , url = #{url, jdbcType=VARCHAR} </if> 
<if test="serial_num != null "> , serial_num = #{serial_num, jdbcType=VARCHAR} </if> 
<if test="is_navigation != null "> , is_navigation = #{is_navigation, jdbcType=VARCHAR} </if> 
<if test="type != null "> , type = #{type, jdbcType=VARCHAR} </if> 
<if test="create_time != null "> , create_time = #{create_time, jdbcType=VARCHAR} </if> 
<if test="update_time != null "> , update_time = #{update_time, jdbcType=VARCHAR} </if> 
      WHERE id=#{id,jdbcType=VARCHAR}  
  </update>
  <delete id="delete" >
      DELETE FROM auth_function 
      WHERE id=#{id,jdbcType=VARCHAR}  
  </delete>
</mapper>