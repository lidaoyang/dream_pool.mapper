<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dream.mapper.Auth_userMapper">
<sql id="sqlsel">id as "id" ,name as "name" ,pwd as "pwd" ,login_time as "login_time" ,logout_time as "logout_time" ,create_time as "create_time" ,update_time as "update_time" </sql>
<sql id="upperSel">ID,NAME,PWD,LOGIN_TIME,LOGOUT_TIME,CREATE_TIME,UPDATE_TIME</sql>
  <select id="select" resultType="Auth_user" >
      SELECT <include refid="upperSel"/> FROM auth_user 
       WHERE id=#{id,jdbcType=VARCHAR}  
  </select>
  <select id="select_uname" resultType="Auth_user" >
      SELECT <include refid="upperSel"/> FROM auth_user 
       WHERE name=#{name,jdbcType=VARCHAR}  
  </select>
  <select id="select_class" parameterType="Map" resultType="Auth_user">
      SELECT <include refid="upperSel"/> FROM auth_user 
      <where>
<if test="id != null "> AND id = #{id, jdbcType=VARCHAR} </if> 
<if test="name != null "> AND name = #{name, jdbcType=VARCHAR} </if> 
<if test="pwd != null "> AND pwd = #{pwd, jdbcType=VARCHAR} </if> 
<if test="login_time != null "> AND login_time = #{login_time, jdbcType=VARCHAR} </if> 
<if test="logout_time != null "> AND logout_time = #{logout_time, jdbcType=VARCHAR} </if> 
<if test="create_time != null "> AND create_time = #{create_time, jdbcType=VARCHAR} </if> 
<if test="update_time != null "> AND update_time = #{update_time, jdbcType=VARCHAR} </if> 
        <if test="otherwhere != null "> AND   ${otherwhere} </if> 
        </where>

   <if test="orderby != null">
    order by ${orderby}
 </if>
  </select>
  <select id="select_map" resultType="hashmap" parameterType="Map" >
      SELECT id,name,login_time,logout_time,create_time,update_time FROM auth_user
      <where>
<if test="id != null "> AND id = #{id, jdbcType=VARCHAR} </if> 
<if test="name != null "> AND name = #{name, jdbcType=VARCHAR} </if> 
<if test="pwd != null "> AND pwd = #{pwd, jdbcType=VARCHAR} </if> 
<if test="login_time != null "> AND login_time = #{login_time, jdbcType=VARCHAR} </if> 
<if test="logout_time != null "> AND logout_time = #{logout_time, jdbcType=VARCHAR} </if> 
<if test="create_time != null "> AND create_time = #{create_time, jdbcType=VARCHAR} </if> 
<if test="update_time != null "> AND update_time = #{update_time, jdbcType=VARCHAR} </if> 
        <if test="otherwhere != null "> AND   ${otherwhere} </if> 
        </where>

   <if test="orderby != null">
    order by ${orderby}
 </if>
   <if test="limit != null">
    limit ${limit}
 </if>
  </select>
  <select id="select_count" resultType="String" parameterType="Map" >
      SELECT count(*) FROM auth_user
      <where>
<if test="id != null "> AND id = #{id, jdbcType=VARCHAR} </if> 
<if test="name != null "> AND name = #{name, jdbcType=VARCHAR} </if> 
<if test="pwd != null "> AND pwd = #{pwd, jdbcType=VARCHAR} </if> 
<if test="login_time != null "> AND login_time = #{login_time, jdbcType=VARCHAR} </if> 
<if test="logout_time != null "> AND logout_time = #{logout_time, jdbcType=VARCHAR} </if> 
<if test="create_time != null "> AND create_time = #{create_time, jdbcType=VARCHAR} </if> 
<if test="update_time != null "> AND update_time = #{update_time, jdbcType=VARCHAR} </if> 
        <if test="otherwhere != null "> AND   ${otherwhere} </if> 
        </where>

  </select>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="Auth_user">
      INSERT INTO auth_user (name,pwd,login_time,logout_time,create_time,update_time)VALUES(#{name,jdbcType=VARCHAR},#{pwd,jdbcType=VARCHAR},#{login_time,jdbcType=VARCHAR},#{logout_time,jdbcType=VARCHAR},#{create_time,jdbcType=VARCHAR},#{update_time,jdbcType=VARCHAR})
  </insert>
  <insert id="insertBatch" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.List">
    <selectKey resultType ="java.lang.Integer" keyProperty= "id" order= "AFTER">
         SELECT LAST_INSERT_ID()
    </selectKey >
    INSERT INTO auth_user (name,pwd,login_time,logout_time,create_time,update_time)VALUES
    <foreach collection="list" item="auth_user" index="index" separator=",">
  	(#{auth_user.name},#{auth_user.pwd},#{auth_user.login_time},#{auth_user.logout_time},#{auth_user.create_time},#{auth_user.update_time})
    </foreach>
  </insert>
  <update id="update" parameterType="Auth_user">
      UPDATE auth_user SET
<if test="id != null ">  id = #{id, jdbcType=VARCHAR} </if> 
<if test="name != null "> , name = #{name, jdbcType=VARCHAR} </if> 
<if test="pwd != null "> , pwd = #{pwd, jdbcType=VARCHAR} </if> 
<if test="login_time != null "> , login_time = #{login_time, jdbcType=VARCHAR} </if> 
<if test="logout_time != null "> , logout_time = #{logout_time, jdbcType=VARCHAR} </if> 
<if test="create_time != null "> , create_time = #{create_time, jdbcType=VARCHAR} </if> 
<if test="update_time != null "> , update_time = #{update_time, jdbcType=VARCHAR} </if> 
      WHERE id=#{id,jdbcType=VARCHAR}  
  </update>
  <delete id="delete" >
      DELETE FROM auth_user 
      WHERE id=#{id,jdbcType=VARCHAR}  
  </delete>
</mapper>